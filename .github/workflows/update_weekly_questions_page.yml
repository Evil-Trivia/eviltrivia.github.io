name: Update Weekly Content Page

on:
  # Scheduled weekly update every Thursday at 6 AM ET (10 AM UTC)
  schedule:
    - cron: '0 10 * * 4'

  # Allows manual triggering of the action for testing
  workflow_dispatch:

jobs:
  update-weekly-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure we get the full history for pushes

      - name: Find the Existing "lastweekstrivia" Page
        id: find_existing
        run: |
          # Find the existing lastweekstrivia*.html file
          EXISTING_PAGE=$(ls lastweekstrivia*.html | head -n 1 || echo "")
          echo "Found existing page: $EXISTING_PAGE"
          echo "::set-output name=existing_page::$EXISTING_PAGE"

      - name: Copy Content from Existing Page (if it exists)
        if: ${{ steps.find_existing.outputs.existing_page != '' }}
        id: copy_content
        run: |
          # Read content from the existing page
          EXISTING_PAGE="${{ steps.find_existing.outputs.existing_page }}"
          PAGE_CONTENT=$(cat "$EXISTING_PAGE")
          
          # Generate a random 8-character string for the new page URL
          RANDOM_SUFFIX=$(openssl rand -hex 4)
          NEW_PAGE_NAME="lastweekstrivia${RANDOM_SUFFIX}.html"
          
          # Write the content to the new page
          echo "$PAGE_CONTENT" > "$NEW_PAGE_NAME"
          
          echo "New page created: $NEW_PAGE_NAME with copied content"
          echo "::set-output name=new_page_name::$NEW_PAGE_NAME"

      - name: Delete old "lastweekstrivia" page
        if: ${{ steps.find_existing.outputs.existing_page != '' }}
        run: |
          # Remove the old lastweekstrivia page
          rm -f "${{ steps.find_existing.outputs.existing_page }}"
          echo "Deleted old lastweekstrivia page."

      - name: List Files in Repository
        run: |
          echo "Listing files in the repository after creating the new page and deleting the old one:"
          ls -l

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Add the new page and remove the deleted file(s) from Git
          git add -A
          
          # Check Git status to see if the files were staged correctly
          git status
          
          git commit -m "Add weekly content page ${{ steps.copy_content.outputs.new_page_name }}" || echo "No changes to commit"
          git push origin HEAD || echo "No changes to push"

      - name: Display new page URL
        if: ${{ steps.copy_content.outputs.new_page_name != '' }}
        run: |
          echo "New page URL: https://eviltrivia.com/${{ steps.copy_content.outputs.new_page_name }}"

      - name: Summarize the New URL
        if: always()
        run: |
          echo "Weekly Trivia page is now live at: https://eviltrivia.com/${{ steps.copy_content.outputs.new_page_name }}"
