name: Update Weekly Content Page

on:
  # Scheduled weekly update every Thursday at 6 AM ET (10 AM UTC)
  schedule:
    - cron: '0 10 * * 4'

  # Allows manual triggering of the action for testing
  workflow_dispatch:

jobs:
  update-weekly-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure we get the full history for pushes

      - name: Delete old "lastweekstrivia" and "lastweeksanswers" pages
        run: |
          rm -f lastweekstrivia*.html lastweeksanswers*.html
          echo "Deleted old lastweekstrivia and lastweeksanswers pages if any existed."

      - name: Generate new filenames with random suffix
        id: generate_filenames
        run: |
          # Generate random suffixes
          RANDOM_SUFFIX_TRIVIA=$(openssl rand -hex 4)
          RANDOM_SUFFIX_ANSWERS=$(openssl rand -hex 4)
          echo "::set-output name=trivia_page::lastweekstrivia${RANDOM_SUFFIX_TRIVIA}.html"
          echo "::set-output name=answers_page::lastweeksanswers${RANDOM_SUFFIX_ANSWERS}.html"

      - name: Copy and modify "lastweekstrivia" HTML content to new page
        id: create_trivia_html
        run: |
          # Check if original "lastweekstrivia.html" exists
          if [ -f lastweekstrivia.html ]; then
            # Copy existing content
            cat lastweekstrivia.html > "${{ steps.generate_filenames.outputs.trivia_page }}"
            echo "Copied content from lastweekstrivia.html to new page: ${{ steps.generate_filenames.outputs.trivia_page }}"
          else
            echo "<!DOCTYPE html><html><head><title>Weekly Trivia</title></head><body>No content available.</body></html>" > "${{ steps.generate_filenames.outputs.trivia_page }}"
            echo "Created placeholder content for new trivia page as the original was not found."
          fi
          echo "::set-output name=trivia_url::https://eviltrivia.com/${{ steps.generate_filenames.outputs.trivia_page }}"

      - name: Copy and modify "lastweeksanswers" HTML content to new page
        id: create_answers_html
        run: |
          # Check if original "lastweeksanswers.html" exists
          if [ -f lastweeksanswers.html ]; then
            # Copy existing content
            cat lastweeksanswers.html > "${{ steps.generate_filenames.outputs.answers_page }}"
            echo "Copied content from lastweeksanswers.html to new page: ${{ steps.generate_filenames.outputs.answers_page }}"
          else
            echo "<!DOCTYPE html><html><head><title>Weekly Answers</title></head><body>No content available.</body></html>" > "${{ steps.generate_filenames.outputs.answers_page }}"
            echo "Created placeholder content for new answers page as the original was not found."
          fi
          echo "::set-output name=answers_url::https://eviltrivia.com/${{ steps.generate_filenames.outputs.answers_page }}"

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Stage new pages and remove old files
          git add -A
          git commit -m "Add new weekly trivia and answers pages" || echo "No changes to commit"
          git push origin HEAD || echo "No changes to push"

      - name: Display new page URLs
        run: |
          echo "New Trivia page URL: ${{ steps.create_trivia_html.outputs.trivia_url }}"
          echo "New Answers page URL: ${{ steps.create_answers_html.outputs.answers_url }}"

      - name: Summarize the New URLs
        if: always()
        run: |
          echo "Weekly Trivia page is now live at: ${{ steps.create_trivia_html.outputs.trivia_url }}"
          echo "Weekly Answers page is now live at: ${{ steps.create_answers_html.outputs.answers_url }}"
